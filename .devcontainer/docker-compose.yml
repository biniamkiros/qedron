version: '3.8'
services:
  devcontainer:
    build: 
      context: .
      dockerfile: Dockerfile
    volumes:
      - ../..:/workspaces:cached     
      - "/var/run/docker.sock:/var/run/docker.sock:rw" 
    network_mode: service:mongodb
    command: sleep infinity

  # -> only used for manual testing locally
  # This config is for MongoDB v5+
  # It's a Replica Set (required for Prisma Client)
  mongodb:
    build:
      context: ./mongodb_replica
    environment:
      MONGO_REPLICA_HOST: 127.0.0.1
      MONGO_REPLICA_PORT: 27019
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - '27019:27019'
    volumes:
     - ./dbdata:/data/db
    restart: unless-stopped
    command: --replSet rs0 --keyFile /etc/mongo-keyfile --bind_ip_all --port 27019
    healthcheck:
      test: echo "try { rs.status() } catch (err) { rs.initiate({_id:'rs0',members:[{_id:0,host:'127.0.0.1:27019'}]}) }" | mongosh --port 27019 -u admin -p password --authenticationDatabase admin
      # interval: 5s
      # timeout: 15s
      # start_period: 15s
      # retries: 10
      interval: 5s
      timeout: 2s
      retries: 20

  # mongodb:
  #   build:
  #     context: ./mongodb_replica
  #     args:
  #       MONGO_VERSION: 6
  #   environment:
  #     MONGO_REPLICA_HOST: 127.0.0.1
  #     MONGO_REPLICA_PORT: 27019
  #     MONGO_INITDB_ROOT_USERNAME: admin
  #     MONGO_INITDB_ROOT_PASSWORD: password
  #     MONGO_INITDB_DATABASE: auth
  #     # MONGOD_PID: 5
  #     # Use "mongo" instead of "mongosh" before v5.0
  #     MONGO_COMMAND: 'mongosh'
  #   ports:
  #     - '27017:27017'
  #     - '27019:27019'
  #   volumes:
  #    - ./dbdata:/data/db
  #   restart: unless-stopped
  #   healthcheck:
  #     # Use "mongo" instead of "mongosh" before v5.0
  #     test: ['CMD', 'mongosh', 'admin', '--port', '27019', '--eval', "db.adminCommand('ping').ok"]
  #     interval: 5s
  #     timeout: 2s
  #     retries: 20

