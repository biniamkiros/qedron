name: publish

on:
  push:
    branches: [ "main" ]
    # paths: 
    #   - 'README.md'
env:
  # Use docker.io for Docker Hub if empty
  # REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.actor }}/<image-name>:latest

jobs:
  runs:
    using: "composite"
    steps:
      - name: make file
        run: |
          touch new_file.js
          cat "${{ github.action_path }}/my_file.js" > new_file.js
        shell: bash
  # publish:
  #   name: publish image
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v3
  #   - name: Login
  #     run: |
  #       echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  #   # - name: Build and Publish Backend
  #   #   run: |
  #   #     COMPOSE_DOCKER_CLI_BUILD=1 DOCKER_BUILDKIT=1 docker-compose -f docker-compose.yml build
  #   #     docker-compose -f docker-compose.yml push 
  #   - name: Build Compose Images
  #     run: docker-compose -f docker-compose.yml build
  #   - name: Push image to Container Registry
  #     run: docker-compose -f docker-compose.yml up -d && exit
  
  deploy:
    name: deploy repo
    runs-on: ubuntu-latest
    
    steps:
    - name: install ssh keys
      # check this thread to understand why its needed:
      # <https://stackoverflow.com/a/70447517>
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts
    - name: connect, pull and start
      run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 
    - name: enter working directory
      run: "cd ${{ secrets.WORK_DIR }} "
    - name: copy compose file
      run: |
        $ curl -s https://${{ secrets.PAT }}@raw.githubusercontent.com/biniamkiros/qedron/master/docker-compose.yml > docker-compose.yml
    - name: docker
      run: |
        echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        "docker compose pull && docker network create app_network && docker compose up -d && exit"
    - name: cleanup
      run: rm -rf ~/.ssh















    # - name: setup git
      # run: "git remote remove origin && git remote add origin https://${{ secrets.PAT }}@github.com/${{ github.actor }}/${{ github.repository }}.git && git pull --all"
      # run: "git pull --all"
        #   steps:

  # update:
  #   - uses: actions/checkout@v3
  #   - name: Login
  #     run: |
  #        echo ${{ secrets.PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  
