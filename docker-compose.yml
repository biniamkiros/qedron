version: "3"

services:
  proxy:
    container_name: proxy
    image: ghcr.io/biniamkiros/proxy:latest
    build:
      context: .
      dockerfile: ./packages/reverse-proxy/Dockerfile
      args:
        PROXY_VERSION: latest
    ports:
      - "80:80"
      - "443:443"
      # - "27019:27019"
      # remove port 8080 for production
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/ssl/:/ssl-certs/
    networks:
      - app_network
  
  seleda:
    container_name: seleda
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seleda.rule=Host(`seleda.qedron.com`)"
    image: ghcr.io/biniamkiros/seleda:latest
    build:
      context: .
      dockerfile: ./apps/seleda/Dockerfile
      args:
        SKIP_ENV_VALIDATION: 1
        DATABASE_URL: file:./db.sqlite
        NEXTAUTH_SECRET: h"
        NEXTAUTH_URL: http://auth.qedron.com
        DISCORD_CLIENT_ID: s
        DISCORD_CLIENT_SECRET: s
    restart: always
    ports:
      - 3000:3000    
    networks:
      - app_network
  
  web:
    container_name: web
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=Host(`web.qedron.com`)"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
    image: ghcr.io/biniamkiros/web:latest
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
    restart: always
    ports:
      - 3001:3001
    networks:
      - app_network
     
  api:
    container_name: api
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.qedron.com`)"
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
    image: ghcr.io/biniamkiros/api:latest
    build:
      context: .
      dockerfile: ./apps/api/Dockerfile
    restart: always
    ports:
      - 3002:3002
    networks:
      - app_network
    
  # -> only used for manual testing locally
  # This config is for MongoDB v5+
  # It's a Replica Set (required for Prisma Client)
  mongodb:
    container_name: mongodb
    labels:
      - traefik.enable=true
      - traefik.docker.network=app_network
      - traefik.http.routers.mongodb.rule=Host(`db.qedron.com`)    
      - traefik.tcp.routers.mongodb.entrypoints=mongodb
      - traefik.tcp.routers.mongodb.service=mongodb
      - traefic.tcp.routers.mongodb.tls=true
      - traefik.tcp.routers.mongodb.tls.certresolver=letsencrypt
      - traefik.tcp.services.mongodb.loadBalancer.server.port=27019
    image: ghcr.io/biniamkiros/mongodb:latest
    build:
      context: .
      dockerfile: ./packages/mongodb_replica/Dockerfile
      args:
        MONGO_VERSION: 6
    environment:
      MONGO_REPLICA_HOST: db.qedron.com
      MONGO_REPLICA_PORT: 27019
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: auth
      # MONGOD_PID: 5
      # Use "mongo" instead of "mongosh" before v5.0
      MONGO_COMMAND: 'mongosh'
    ports:
      - '27019:27019'
    volumes:
     - ./dbdata:/data/db
    restart: unless-stopped
    healthcheck:
      # Use "mongo" instead of "mongosh" before v5.0
      test: ['CMD', 'mongosh', 'admin', '--port', '27019', '--eval', "db.adminCommand('ping').ok"]
      interval: 5s
      timeout: 2s
      retries: 20
    networks:
      - app_network

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
    external: true
