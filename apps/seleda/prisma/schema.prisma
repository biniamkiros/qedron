// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
  // output = "../node_modules/.prisma/client"
}

datasource db {
    provider = "mongodb"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      =  env("SELEDA_DATABASE_URL")
}

model Tender {
    id            String @id @default(auto()) @map("_id") @db.ObjectId
    egpId         String @unique
    title         String 
    description   String 
    openingDate   String 
    closingDate   String 
    sources       String[] 
    entity        String 
    link          String
    status        String
    security      String
    language      String 
    region        String
    messages      Message[]
    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
}

model User {
    id                  String @id @default(auto()) @map("_id") @db.ObjectId
    chatId              Int @unique
    name                String
    username            String?
    lastsubRemindDate   DateTime? 
    activeEndDate       DateTime? 
    notifTime           String?
    status              String @default("active")
    tags                String[]
    messages            Message[]
}

model Message{
    id            String @id @default(auto()) @map("_id") @db.ObjectId
    userId        String  @db.ObjectId
    tenderId      String  @db.ObjectId
    user          User    @relation(fields: [userId], references: [id])
    tender        Tender  @relation(fields: [tenderId], references: [id])
    type          String  @default("")
    tags          String[]
    atempt        Int     @default(0)
    createdAt     DateTime @default(now())
    
    @@unique([userId, tenderId], name: "messageId")
}

model Notification{
    id            String @id @default(auto()) @map("_id") @db.ObjectId
    userId        String  @db.ObjectId
    message       String  @default("")
    atempt        Int     @default(0)
    createdAt     DateTime @default(now())
}
